#!/bin/bash

_dq_usage() {
  echo "Usage: $(basename $0) [group]"
  echo "       $(basename $0) {-h|--help}"
  exit 0
}

LIB_DIR=$(dirname $0)/lib

OK=0
KO=0

_dq_report () {
  $2 >/dev/null 2>&1

  if [ "$?" -eq 0 ]; then
    echo "✔ $1"
    OK=$(($OK+1))
  else
    echo "✘ $1"
    KO=$(($KO+1))
  fi
}

_dq_source() {
  for script in $(ls $LIB_DIR/${1}.sh); do
    source $script
  done
}

declare -a commands=(
  'core               :git --version'
  'core               :vi --version'
  'core               :curl --version'
  'core               :python --version'
  'core               :perl -v'
  'core               :node --version'
  'core               :java -version'
  'core               :ruby -v'
  'core/golang        :go version'
  'java               :javac -version'
  'java               :ant -version'
  'java               :mvn -v'
  'java               :gradle -v'
  'groovy             :groovy --version'
  'groovy             :groovyc --version'
  'groovy             :lazybones --version'
  'clojure            :emacs --version'
  'clojure            :clj --help'
  'clojure            :lein -v'
  'ruby/bundler       :bundle -v'
  'ruby               :gem -v'
  'ruby               :rvm -v'
  'ruby               :rake -V'
  'pyton              :virtualenv --version'
  'scala              :scala -version'
  'scala              :scalac -version'
  'scala              :sbt svt-version'
  'frontend           :npm --version'
  'frontend           :grunt --version'
  'frontend           :bower --version'
  'frontend/yoeman    :yo --version'
  'frontend           :coffee --version'
  'frontend           :sass --version'
  'db/mysql server    :mysqld --version'
  'db/mysql client    :mysql --version'
  'db/postgres server :postgres --version'
  'db/postgres client :psql --version'
  'db/mongo server    :mongod --version'
  'db/mongo client    :mongo --version'
)

_dq_commands() {
  orig_ifs=$IFS
  IFS=%

  for cmd in ${commands[*]}; do
    _dq_command "$cmd"
  done

  IFS=$orig_ifs
}

_dq_command() {
  IFS=:; set -- $1
  name=$1
  cmd="$2"

  IFS=/; set -- $name
  grp=$1
  name=${2:-$(IFS=" "; set -- $cmd; echo $1)}

  IFS=$orig_ifs

  #filtering logic to go here

  #echo "$grp -> $name [ $cmd ]"
  _dq_report "$name" "$cmd"
}

case ${1:-core} in
  -h|--help)
    _dq_usage
    ;;
  -c)
    _dq_commands $2 $3
    ;;
  all)
    _dq_source '*/*'
    ;;
  core)
    _dq_source 'core/*'
    ;;
  java_dev)
    _dq_source 'core/java'
    _dq_source 'java/*'
    ;;
  clojure_dev)
    _dq_source 'core/java'
    _dq_source 'clojure/*'
    ;;
  groovy_dev)
    _dq_source 'core/java'
    _dq_source 'java/gradle'
    _dq_source 'groovy/*'
    ;;
  scala_dev)
    _dq_source 'core/java'
    _dq_source 'scala/*'
    ;;
  ruby_dev)
    _dq_source 'core/ruby'
    _dq_source 'ruby/*'
    ;;
  frontend_dev)
    _dq_source 'core/*'
    _dq_source 'frontend/*'
    ;;
  db)
    _dq_source 'db/*'
    ;;
esac


echo; echo Your dq is $OK / $(($OK+$KO))

exit $KO
